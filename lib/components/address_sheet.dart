import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:pg_hostel/components/primary_button.dart';import '../request_model/auth_request_model.dart';import '../utils/auth_utils.dart';import '../utils/custom_colors.dart';import '../view_models/auth_view_model.dart';class AddressSheet extends StatefulWidget {  AddressSheet(      {super.key,      required this.locationDetails});  final LocationModel? locationDetails;  // final addressViewModel = Get.put(AddressViewModel());  @override  State<AddressSheet> createState() => _AddressSheetState();}class _AddressSheetState extends State<AddressSheet> {  final authViewModel = Get.put(AuthViewModel());  final TextEditingController address1Controller = TextEditingController();  final TextEditingController address2Controller = TextEditingController();  final TextEditingController cityController = TextEditingController();  final TextEditingController stateController = TextEditingController();  final TextEditingController pinCodeController = TextEditingController();  final TextEditingController landMarkController = TextEditingController();  bool isUpdate = false;  @override  void initState() {    super.initState();    address1Controller.text = widget.locationDetails?.address1 ?? '';    address2Controller.text = widget.locationDetails?.address2 ?? '';    cityController.text = widget.locationDetails?.city ?? '';    stateController.text = widget.locationDetails?.state ?? '';    pinCodeController.text = (widget.locationDetails?.pinCode ?? 0).toString();  }  @override  Widget build(BuildContext context) {    return GestureDetector(        onTap: () => {},        child: Container(          padding: MediaQuery.of(context).viewInsets,          color: Colors.white,          width: double.infinity,          child: Padding(            padding: const EdgeInsets.only(left: 12, right: 12, top: 10),            child: SingleChildScrollView(              child: Column(                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  Text(widget.locationDetails?.address1 ?? '',                      style: TextStyle(                          fontWeight: FontWeight.w700,                          fontSize: 16,                          color: CustomColors.textColor)),                  const SizedBox(height: 8),                  Text(                    widget.locationDetails?.address2 ?? '',                    style:  TextStyle(                        fontWeight: FontWeight.w400,                        fontSize: 12,                        color: CustomColors.textColor),                  ),                  const SizedBox(height: 20),                  TextFormField(                    controller: address1Controller,                    decoration:  InputDecoration(                      hintText: 'Address Line 1',                      labelStyle: TextStyle(                        color: CustomColors.primary,                        fontWeight: FontWeight.w600                      ),                      enabledBorder: UnderlineInputBorder(                        borderSide: BorderSide(color: CustomColors.primary),                      ),                    ),                  ),                  const SizedBox(height: 20),                  TextFormField(                    controller: address2Controller,                    decoration:  InputDecoration(                      hintText: 'Address Line 2',                      labelStyle: TextStyle(                        color: CustomColors.primary,                          fontWeight: FontWeight.w600                      ),                      enabledBorder: UnderlineInputBorder(                        borderSide: BorderSide(color: CustomColors.primary),                      ),                    ),                  ),                  const SizedBox(height: 20),                  TextFormField(                    controller: cityController,                    enabled:false,                    decoration:  InputDecoration(                      hintText: 'City',                      labelStyle: TextStyle(                        color: CustomColors.primary,                          fontWeight: FontWeight.w600                      ),                      enabledBorder: UnderlineInputBorder(                        borderSide: BorderSide(color: CustomColors.primary),                      ),                    ),                  ),                  const SizedBox(height: 20),                  TextFormField(                    controller: stateController,                    enabled:false,                    decoration:  InputDecoration(                      hintText: 'State',                      labelStyle: TextStyle(                        color: CustomColors.primary,                          fontWeight: FontWeight.w600                      ),                      enabledBorder: UnderlineInputBorder(                        borderSide: BorderSide(color: CustomColors.primary),                      ),                    ),                  ),                  const SizedBox(height: 20),                  TextFormField(                    controller: pinCodeController,                    keyboardType: TextInputType.number,                    maxLength: 6,                    decoration:  InputDecoration(                      hintText: 'Pin Code',                      counterText: '',                      labelStyle: TextStyle(                        color: CustomColors.primary,                          fontWeight: FontWeight.w600                      ),                      enabledBorder: UnderlineInputBorder(                        borderSide: BorderSide(color: CustomColors.primary),                      ),                    ),                  ),                  const SizedBox(height: 20),                  TextFormField(                    controller: landMarkController,                    decoration:  InputDecoration(                      hintText: 'Land Mark',                      counterText: '',                      labelStyle: TextStyle(                          color: CustomColors.primary,                          fontWeight: FontWeight.w600                      ),                      enabledBorder: UnderlineInputBorder(                        borderSide: BorderSide(color: CustomColors.primary),                      ),                    ),                  ),                  const SizedBox(                    height: 12,                  ),                  PrimaryButton(buttonTxt: "Confirm", buttonClick: () {                    authViewModel.locationDetails.value = authViewModel.locationDetails.value?.copyWith(address1: address1Controller.text,address2: address2Controller.text,pinCode: pinCodeController.text.isEmpty ? null :int.parse(pinCodeController.text),city: cityController.text,state: stateController.text,landMark: landMarkController.text,latitude:widget.locationDetails?.latitude ?? 0.0,longitude:widget.locationDetails?.longitude ?? 0.0 );                    final String? validatorResponse = AuthUtils.validateRequestFields(['address1','address2','city','state','landMark','pinCode','latitude','longitude'], authViewModel.locationDetails.value!.toJson());                    if(validatorResponse != null){                      Get.snackbar("Error",validatorResponse,backgroundColor: CustomColors.primary,colorText: CustomColors.white,snackPosition: SnackPosition.BOTTOM);                      return;                    };                    Get.close(2);                  })                  ,const SizedBox(height: 20),                ],              ),            ),          ),        ));  }}